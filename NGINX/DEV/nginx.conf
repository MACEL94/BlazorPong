user nginx;

worker_processes    auto;

events { worker_connections 1024; }

http {
  include             /etc/nginx/proxy.conf;
  include             /etc/nginx/mime.types;
  sendfile            on;
  keepalive_timeout   29; # Adjust to the lowest possible value that makes sense for your use case.
  client_body_timeout 10; client_header_timeout 10; send_timeout 10;

  map $http_connection $connection_upgrade {
    "~*Upgrade" $http_connection;
    default keep-alive;
  }

  upstream blazorpong {
    server aspnetcoreapp:5000;
  }

  server {
    listen 80;
    listen 443;
    server_name     $hostname;
    ssl on;
    ssl_certificate /etc/letsencrypt/live/dockerblazorpongwasm.cloud/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dockerblazorpongwasm.cloud/privkey.pem;

    location ^~ /.well-known {
      allow all;
      root  /data/letsencrypt/;
    }

    # Configure the SignalR Endpoint
    location / {
      # App server url
      proxy_pass http://blazorpong;

      # Configuration for WebSockets
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_cache off;

      # Configuration for ServerSentEvents
      proxy_buffering off;

      # Configuration for LongPolling or if your KeepAliveInterval is longer than 60 seconds
      proxy_read_timeout 100s;

      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
}